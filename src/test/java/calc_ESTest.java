/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 13 16:25:01 GMT 2024
 */

import org.junit.Test;
import static org.junit.Assert.*;
import example.calc;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class calc_ESTest extends calc_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = calc.div(551, 1135);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = calc.sub(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = calc.sub(98022, (-2893));
      assertEquals(100915, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = calc.mult(0, (-1519));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = calc.mult(2836, 2836);
      assertEquals(8042896, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = calc.div((-2598), (-2));
      assertEquals(1299, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = calc.div(269361, (-2271));
      assertEquals((-118), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = calc.add(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = calc.add(2078, 0);
      assertEquals(2078, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = calc.div(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = calc.mult(2321, (-1));
      assertEquals((-2321), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = calc.sub((-2), (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      calc calc0 = new calc();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = calc.add((-1), (-1));
      assertEquals((-2), int0);
  }
}
