/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 14 02:45:27 GMT 2024
 */

package example;

import org.junit.Test;
import static org.junit.Assert.*;
import example.calc;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class calc_ESTest extends calc_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = calc.addAndSub(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = calc.addAndSub((-2257), 5094049);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = calc.sub(1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = calc.sub(0, (-1494));
      assertEquals(1494, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = calc.mult(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = calc.mult(128, (-664));
      assertEquals((-84992), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = calc.div(1109, (-1));
      assertEquals((-1109), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = calc.add(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = calc.add((-2257), 0);
      assertEquals((-2257), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = calc.div(1845, 1845);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = calc.div(3404025, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = calc.mult(1845, 1845);
      assertEquals(3404025, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = calc.sub(1845, 3405870);
      assertEquals((-3404025), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      calc calc0 = new calc();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = calc.add(3404025, 1845);
      assertEquals(3405870, int0);
  }
}
